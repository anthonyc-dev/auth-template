generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model AuthenticatedUser {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  schoolId     String   @unique
  firstName    String
  lastName     String
  email        String   @unique
  phoneNumber  String
  password     String
  role         String
  refreshToken String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  permits      Permit[]
  requirements Requirement[]
  studentReq   StudentRequirement[]
}

model Permit {
  id         String              @id @default(auto()) @map("_id") @db.ObjectId
  userId     String              @db.ObjectId
  permitCode String              @unique
  expiresAt  DateTime
  status     String              @default("active")
  createdAt  DateTime            @default(now())

  user       AuthenticatedUser   @relation(fields: [userId], references: [id])
  @@map("permits")
}


model Requirement {
  id             String                @id @default(auto()) @map("_id") @db.ObjectId
  userId         String                @db.ObjectId
  title          String
  requirements   String[]
  department     String
  dueDate        DateTime
  description    String
  createdAt      DateTime              @default(now())
  updatedAt      DateTime              @updatedAt
  studentReq     StudentRequirement[]
  clearingOfficer        AuthenticatedUser     @relation(fields: [userId], references: [id])

}

model StudentRequirement {
  id              String                  @id @default(auto()) @map("_id") @db.ObjectId
  studentId       String                  @db.ObjectId
  requirementId   String                  @db.ObjectId
  status          String                  @default("Pending")
  student         AuthenticatedUser       @relation(fields: [studentId], references: [id])
  requirement     Requirement             @relation(fields: [requirementId], references: [id])
}
