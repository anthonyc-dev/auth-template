generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}


//clearing officer model -> permit, requirements model & studentReq
model ClearingOfficer {
  id           String                 @id @default(auto()) @map("_id") @db.ObjectId
  schoolId     String                 @unique
  firstName    String
  lastName     String
  email        String                 @unique
  phoneNumber  String
  password     String
  role         String
  refreshToken String?
  createdAt    DateTime               @default(now())
  updatedAt    DateTime               @updatedAt
  
  permits      Permit[]
  requirements Requirement[]
}


//permit model
model Permit {
  id         String              @id @default(auto()) @map("_id") @db.ObjectId
  userId     String              @db.ObjectId
  permitCode String              @unique
  expiresAt  DateTime
  status     String              @default("active")
  createdAt  DateTime            @default(now())

  user       ClearingOfficer     @relation(fields: [userId], references: [id])
  @@map("permits")
}

//requirement model -> studentReq & clearing officer
model Requirement {
  id             String                        @id @default(auto()) @map("_id") @db.ObjectId
  userId         String                        @db.ObjectId
  title          String
  requirements   String[]
  department     String
  dueDate        DateTime
  description    String
  createdAt      DateTime                      @default(now())
  updatedAt      DateTime                      @updatedAt

  clearingOfficer        ClearingOfficer       @relation(fields: [userId], references: [id])
  studentReq     StudentRequirement[]
}


//student model -> studentReq
model Student {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  schoolId    String   @unique
  firstName   String
  lastName    String
  email       String   @unique
  phoneNumber String
  program     String
  yearLevel   String
  password    String
  refreshToken String?
  createdAt    DateTime               @default(now())
  updatedAt    DateTime               @updatedAt

  studentReq  StudentRequirement[]
}


//student requirement model
model StudentRequirement {
  id              String                  @id @default(auto()) @map("_id") @db.ObjectId
  studentId       String                  @db.ObjectId
  requirementId   String                  @db.ObjectId
  status          String                  @default("Pending")

  student         Student                 @relation(fields: [studentId], references: [id])
  requirement     Requirement             @relation(fields: [requirementId], references: [id])
}